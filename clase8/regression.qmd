---
  format:
    revealjs: 
      theme: [default, style.scss]
      slide-number: true
      highlight-style: github
      width: 1400
      css:
         - https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.2/font/bootstrap-icons.css
---
        

##  {.center}

<h1 class="text-indigo-pink">

Analítica de Datos

<h1>

<h2>Regresión Lineal</h2>

::: {style="margin-top:50px"}
### Carlos Cardona Andrade {.text-orange-gold}
:::

# Tabla de contenido

1.  [Regresión Lineal](#lm)

# [Regresión Lineal]{.hl .hl-gold} {#lm .text-wash-black background="linear-gradient(45deg, #f37335, #fdc830)"}


# Cookies and happiness {.text-orange-gold}


::: {.box-inv-2.medium}
**Prediction**
:::

::: {.box-2}
**Forecast the future**
:::

::: {.box-2.sp-after}
Focus is on **Y**
:::

::: {.box-inv-2.small}
Netflix trying to<br>guess your next show
:::

::: {.box-inv-2.small}
Predicting who will enroll in SNAP
:::

# Cookies and happiness {.text-orange-gold}

```{r}
#| echo: false
library(tidyverse)
library(patchwork)
library(broom)
library(knitr)
cookies <- tibble(happiness = c(0.5, 2, 1, 2.5, 3, 1.5, 2, 2.5, 2, 3),
                  cookies = 1:10)

cookies_data <- cookies
cookies_model <- lm(happiness ~ cookies, data = cookies)
cookies_fitted <- augment(cookies_model)
```



# Cookies and happiness {.text-orange-gold}



```{r}
#| echo: false
#| eval: true

cookies |> 
  knitr::kable(format = "html")
```


# Cookies and happiness {.text-orange-gold}



```{r}
#| echo: false
#| eval: true

cookies |> 
  knitr::kable(format = "html") |> 
  kableExtra::kable_styling(font_size = 30) # Adjust the font size as needed
```


# Cookies and happiness {.text-orange-gold}



```{r}
#| echo: false
#| eval: true

cookies
```


# 

```{r}
#| echo: false
#| eval: true
#| fig-align: "center"
#| fig-width: 8
#| fig-height: 4


cookies_base <- ggplot(cookies_fitted, aes(x = cookies, y = happiness)) +
  geom_point(size = 3) +
  coord_cartesian(xlim = c(0, 10), ylim = c(0, 3)) +
  scale_x_continuous(breaks = 0:10) +
  labs(x = "Cookies eaten", y = "Level of happiness") +
  theme_minimal(base_size = 14) +
  theme(panel.grid.minor = element_blank(),
        plot.title = element_text(face = "bold"))

cookies_base
```




# 

```{r}
#| echo: false
#| eval: true
#| fig-align: "center"
#| fig-width: 8
#| fig-height: 4

cookies_base +
  geom_smooth(method = lm, color = "#0074D9", formula = y ~ splines::bs(x, 7), se = FALSE)
```



# 

```{r}
#| echo: false
#| eval: true
#| fig-align: "center"
#| fig-width: 8
#| fig-height: 4

cookies_base +
  geom_smooth(method = "loess", color = "#0074D9", se = FALSE)
```



# 

```{r}
#| echo: false
#| eval: true
#| fig-align: "center"
#| fig-width: 8
#| fig-height: 4

cookies_base +
  geom_smooth(method = "lm", color = "#0074D9", se = FALSE)
```



# 

```{r}
#| echo: false
#| eval: true
#| fig-align: "center"
#| fig-width: 8
#| fig-height: 4

cookies_with_residual <- cookies_base +
  geom_smooth(method = "lm", color = "#0074D9", se = FALSE) +
  geom_segment(aes(xend = cookies, yend = .fitted), color = "#FF851B", size = 1)

cookies_with_residual
```


# 

```{r}
#| echo: false
#| eval: true
#| fig-align: "center"
#| fig-width: 8
#| fig-height: 4

cookies_residual_only <- ggplot(cookies_fitted, aes(x = cookies, y = .resid)) +
  geom_hline(yintercept = 0, color = "#B10DC9", size = 1) +
  geom_point(size = 3) +
  geom_segment(aes(xend = cookies, yend = 0), color = "#FF851B", size = 1) +
  coord_cartesian(xlim = c(0, 10), ylim = c(-1.5, 1.5)) +
  scale_x_continuous(breaks = 0:10) +
  labs(x = "Cookies eaten", y = "Distance from line") +
  theme_minimal(base_size = 14) +
  theme(panel.grid.minor = element_blank(),
        plot.title = element_text(face = "bold"))

cookies_residual_only
```




# 

```{r}
#| echo: false
#| eval: true
#| fig-align: "center"
#| fig-width: 8
#| fig-height: 4

(cookies_with_residual + labs(title = "Cookies and happiness")) + 
  (cookies_residual_only + labs(title = "Residual errors"))
```


  